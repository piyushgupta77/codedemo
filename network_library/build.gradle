apply plugin: 'com.android.library'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName


        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:$rootProject.junitVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:converter-moshi:$rootProject.moshiConverterVersion"
    api "com.squareup.moshi:moshi:$rootProject.moshiVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    api "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    api "com.trello.rxlifecycle2:rxlifecycle:$rootProject.rxlifecycleVersion"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpInterceptorVersion"
    api "com.trello.rxlifecycle2:rxlifecycle:$rootProject.rxlifecycleVersion"
    api "com.trello.rxlifecycle2:rxlifecycle-components:$rootProject.rxlifecycleVersion"
}
